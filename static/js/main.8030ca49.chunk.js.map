{"version":3,"sources":["components/random_users/RandomUsers.js","components/global/Header.js","components/global/Footer.js","components/Home/Home.js","core/Utils.js","components/github/RepoDetails.js","components/github/RepoList.js","components/github/FindRepo.js","components/github/Github.js","components/about/About.js","components/contact/Contact.js","components/CDN/CDN.js","components/CDN/LibraryDetails.js","App.js","reportWebVitals.js","index.js"],"names":["RandomUsers","useState","profile","setProfile","title","useEffect","document","console","log","changeUser","fetch","then","response","json","data","results","className","onClick","map","user","index","style","background","picture","large","src","alt","name","first","last","email","gender","phone","dob","age","location","street","number","city","state","country","postcode","Header","to","exact","activeClassName","Footer","Home","formatDate","d","today","Date","getDate","parseInt","getMonth","getFullYear","RepoDetails","props","myData","RepoList","repos","length","role","id","item","data-id","href","html_url","description","created_at","size","e","repo","querySelector","repoDetailsHandler","mydata","FindRepo","setTitle","type","placeholder","onBlur","event","target","value","clickHandler","spinnerLoading","color","height","width","visible","Github","setRepos","setSpinnerLoading","username","apiUrl","About","Contact","CDN","libraries","setLibrary","loader","setLoader","React","setTile","library","latest","readOnly","currentTarget","t","inp","parentElement","select","execCommand","classList","add","setTimeout","remove","err","alert","copyToClipboard","aria-hidden","rel","LibraryDetails","assets","setAsset","keywords","setkeyword","libraryName","match","params","catch","error","replace","toUpperCase","author","versions","version","license","homepage","headerContent","asset","data-language","files","i","input","previousElementSibling","copyCodeToClipboard","tutorials","App","extraProps","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+XAiFeA,EA9EK,WAGhB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAgBF,mBAAS,gBAAlBG,EAAP,oBAGAC,qBAAU,WAENC,SAASF,MAAQA,EACjBG,QAAQC,IAAI,qBAGhBH,qBAAU,WACNI,MACD,IAOH,IAAMA,EAAa,WACfC,MAAM,8BACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACHP,QAAQC,IAAI,SAAUM,EAAKC,SAC3BZ,EAAWW,EAAKC,aAI5B,OACI,0BAASC,UAAU,sBAAnB,UACI,iDAEA,qBAAKA,UAAU,gCAAf,SACI,wBAAQA,UAAU,4BAA4BC,QAAS,kBAAMR,KAA7D,2BAKHP,EAAQgB,KAAI,SAACC,EAAMC,GAAP,OACT,yBAASJ,UAAU,oBAAnB,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAcK,MAAO,CAAEC,WAAW,OAAD,OAASH,EAAKI,QAAQC,MAAtB,MAAhD,SACI,qBAAKC,IAAKN,EAAKI,QAAQC,MAAOE,IAAKP,EAAKQ,KAAKC,UAEjD,sBAAKZ,UAAU,kBAAf,UACI,qBAAIA,UAAU,WAAd,UAA0BG,EAAKQ,KAAKvB,MAApC,IAA4Ce,EAAKQ,KAAKC,MAAtD,IAA8DT,EAAKQ,KAAKE,QAExE,sBAAKb,UAAU,YAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBG,EAAKW,QAC7B,sBAAMd,UAAU,OAAhB,SAAwBG,EAAKY,SAC7B,sBAAMf,UAAU,OAAhB,SAAwBG,EAAKa,QAC7B,sBAAMhB,UAAU,OAAhB,SAAwBG,EAAKc,IAAIC,SAGrC,qBAAKlB,UAAU,qBAAf,SACI,oCACKG,EAAKgB,SAASC,OAAOC,OAD1B,IACmClB,EAAKgB,SAASC,OAAOT,KADxD,KACgER,EAAKgB,SAASG,KAD9E,IACoF,uBAC/EnB,EAAKgB,SAASI,MAFnB,IAE2BpB,EAAKgB,SAASK,QAFzC,MAEqDrB,EAAKgB,SAASM,qBAlBvCrB,UCjB7CsB,G,MA1BA,WACX,OACI,wBAAQ1B,UAAU,aAAlB,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAMA,UAAU,mBAAhB,eAA2C,sBAAMA,UAAU,eAAhB,kBAC3C,sBAAMA,UAAU,mBAAhB,eAA2C,sBAAMA,UAAU,eAAhB,sBAGnD,qBAAKA,UAAU,kBAAf,SACA,+BACI,6BAAI,cAAC,IAAD,CAAS2B,GAAG,IAAIC,OAAK,EAAEC,gBAAgB,SAAvC,oBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,SAASE,gBAAgB,SAArC,qBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,UAAUE,gBAAgB,SAAtC,sBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,OAAOE,gBAAgB,SAAnC,uBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,eAAeE,gBAAgB,SAA3C,4BACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,WAAWE,gBAAgB,SAAvC,mCCTTC,EAXA,WACX,OACI,wBAAQ9B,UAAU,SAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,OAAb,+DCID+B,EARF,WACT,OACI,qBAAK/B,UAAU,eAAf,SACI,0D,iBCGCgC,G,MAAa,SAACC,GACvB,IAAIC,EAAQ,IAAIC,KAAKF,GAErB,OADWC,EAAME,UAAY,IAAMC,SAASH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,gBCCrEC,EARK,SAACC,GACjB,OACI,qBAAKzC,UAAU,uBAAf,SACI,+CAAkByC,EAAMC,aCmDrBC,EAlDE,SAACF,GACd,IAAQG,EAAUH,EAAVG,MAGR,IAAKA,GAA0B,IAAjBA,EAAMC,OAChB,OACI,qBAAK7C,UAAU,wBAAwB8C,KAAK,QAA5C,4BAiBR,OACI,0BAAS9C,UAAU,iBAAnB,UACI,8CAEA,qBAAKA,UAAU,aAAa+C,GAAG,YAA/B,SAEQH,GAASA,EAAMC,OAAS,EACpBD,EAAM1C,KAAI,SAAC8C,GACP,OACI,sBAAKhD,UAAU,wEAAwEiD,UAASD,EAAKD,GAArG,UACI,mBAAGG,KAAMF,EAAKG,SAAd,SAAwB,oBAAInD,UAAU,OAAd,SAAsBgD,EAAKrC,SACnD,mBAAGX,UAAU,OAAb,SAAqBgD,EAAKI,cAC1B,gCAAQpB,EAAWgB,EAAKK,cACxB,sBAAMrD,UAAU,iCAAhB,SAAkDgD,EAAKM,OACvD,wBAAQtD,UAAU,kBAAkBC,QAAS,SAACsD,GAAD,OAzBxDC,EAyB2ER,EAxBtE1D,SAASmE,cAAc,cAI7ClE,QAAQC,IAAI,SAAUgE,QAEtBf,EAAMiB,mBAAmBF,EAAKT,IAPd,IAACS,GAyBW,qBAL0GR,EAAKD,OAQtH,OAIjB,cAAC,EAAD,CAAaY,OAAQ,eCNlBC,EAvCE,SAACnB,GACd,MAA0BxD,qBAA1B,mBAAOG,EAAP,KAAcyE,EAAd,KAEA,OACI,0BAAS7D,UAAU,eAAnB,UACI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAO8D,KAAK,OAAO9D,UAAU,eAAe+D,YAAY,6BACpDC,OAAQ,SAAAC,GAAK,OAAIJ,EAASI,EAAMC,OAAOC,YAE/C,qBAAKnE,UAAU,WAAf,SAEI,wBAAQ8D,KAAK,SAAS9D,UAAU,kBAC5BC,QAAS,kBAAMwC,EAAM2B,aAAahF,IADtC,0BAORqD,EAAM4B,eACF,cAAC,IAAD,CACIP,KAAK,eACLQ,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPxE,UAAU,SACVyE,SAAS,IAEX,cAAC,EAAD,CAAU7B,MAAOH,EAAMG,YCY9B8B,EA1CA,WAEX,MAA0BzF,mBAAS,IAAnC,mBAAO2D,EAAP,KAAc+B,EAAd,KACA,EAA4C1F,oBAAS,GAArD,mBAAOoF,EAAP,KAAuBO,EAAvB,KAEAvF,qBAAU,WACNuF,GAAkB,KACnB,IAuBH,OACI,0BAAS5E,UAAU,yBAAnB,UACI,yCACA,cAAC,EAAD,CACIoE,aAxBK,SAACS,GACdD,GAAkB,GAClBrF,QAAQC,IAAI,YAAaqF,GAEzB,IAGMC,EAAM,uCAFXD,GAAyD,eAE9C,UAGZnF,MAAMoF,GACDnF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACH6E,EAAS7E,GACT8E,GAAkB,OAWlBP,eAAiBA,EACjBzB,MAAOA,QC/BRmC,EARD,WACV,OACI,yBAAS/E,UAAU,gBAAnB,SACI,6CCQGgF,EAXC,SAACvC,GAGb,OADAlD,QAAQC,IAAIiD,GAER,0BAASzC,UAAU,kBAAnB,UACI,4CACCyC,EAAM3C,KAAKwE,UC4HTW,G,MA1HH,SAACxC,GAET,MAAgCxD,mBAAS,IAAzC,mBAAOiG,EAAP,KAAkBC,EAAlB,KAEA,EAA4BlG,oBAAS,GAArC,mBAAOmG,EAAP,KAAeC,EAAf,KAEA,EAAyBC,IAAMrG,WAA/B,mBAAOG,EAAP,KAAcmG,EAAd,KAEA,EAA4CtG,oBAAS,GAArD,mBAAOoF,EAAP,KAAuBO,EAAvB,KAGAvF,qBAAU,WACNkG,EAAQ9C,EAAM3C,KAAKV,OACnBE,SAASF,MAAQA,IAClB,CAACA,IAIJC,qBAAU,WAENE,QAAQC,IAAI,WAAY4F,GAsBxB1F,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFP,QAAQC,IAAI,SAAUM,GACtBqF,EAAWrF,EAAKC,SAChBsF,GAAU,GACVT,GAAkB,QAE3B,IA8DH,OACI,0BAAS5E,UAAU,cAAnB,UACI,yCAtDAqE,EAEI,yBAASrE,UAAU,gBAAnB,SACI,cAAC,IAAD,CACI8D,KAAK,eACLQ,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPxE,UAAU,aAMlB,0BAASA,UAAU,GAAnB,UACI,2CACA,qBAAKA,UAAU,MAAf,SAEQkF,EAAUhF,KAAI,SAACsF,EAASpF,GACpB,OACI,qBAAKJ,UAAU,kCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BwF,EAAQ7E,OACpC,qBAAKX,UAAU,YAAf,SACI,sBAAK+C,GAAG,aAAa/C,UAAU,cAA/B,UACI,uBAAO+C,GAAG,OAAOoB,MAAOqB,EAAQC,OAAQC,UAAQ,IAChD,qBAAK3C,GAAG,OAAO9C,QAAS,SAACsD,GAAD,OPjFjD,SAACA,GAE5BhE,QAAQC,IAAI,IAAK+D,EAAEoC,eAGnB,IAAIC,EAAIrC,EAAEoC,cACNE,EAAMD,EAAEE,cAAcrC,cAAc,SAIxC,GAAIoC,GAAOA,EAAIE,OAAQ,CAEnBF,EAAIE,SACJ,IAEIzG,SAAS0G,YAAY,QAIrBJ,EAAEK,UAAUC,IAAI,UAChBC,YAAW,WACPP,EAAEK,UAAUG,OAAO,YACpB,MACL,MAAOC,GAELC,MAAM,qCOwDqEC,CAAgBhD,IAA/C,SACI,mBAAGvD,UAAU,kBAAkBwG,cAAY,gBAIvD,sBAAKxG,UAAU,qCAAf,UACI,mBAAGkD,KAAMsC,EAAQC,OAAQvB,OAAO,SAASuC,IAAI,aAAazG,UAAU,kBAApE,6BAEA,cAAC,IAAD,CAAM2B,GAAI,QAAU6D,EAAQ7E,KAA5B,SAAkC,wBAAQX,UAAU,oBAAlB,oCAfII,gBCsG3EsG,G,YAxLQ,SAACjE,GACpB,MAA8BxD,mBAAS,IAAvC,mBAAOuG,EAAP,KAAgBL,EAAhB,KACA,EAA2BlG,mBAAS,IAApC,mBAAO0H,EAAP,KAAeC,EAAf,KACA,EAA+B3H,mBAAS,IAAxC,mBAAO4H,EAAP,KAAiBC,EAAjB,KACA,EAA0B7H,qBAA1B,mBAAOG,EAAP,KACA,GADA,KAC4CH,oBAAS,IAArD,mBAAOoF,EAAP,KAAuBO,EAAvB,KAEImC,EAActE,EAAMuE,MAAMC,OAAOtG,KAGrCtB,qBAAU,WACNK,MAAM,mCAAD,OAAoCqH,IACpCpH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEFqF,EAAWrF,GACX8G,EAAS9G,EAAK6G,QACdG,EAAWhH,EAAK+G,UAChBjC,GAAkB,MAErBsC,OAAM,SAAAC,GACH5H,QAAQC,IAAI,gBAAiB2H,GAC7BvC,GAAkB,QAG3B,CAACmC,IAGJ1H,qBAAU,WACNC,SAASF,MAAQ2H,EAAYK,QAAQ,IAAK,KAAKC,gBAChD,CAACjI,IAsHJ,OACI,yBAASY,UAAU,0BAAnB,SAMQqE,EAEQ,yBAASrE,UAAU,gBAAnB,SACI,cAAC,IAAD,CACI8D,KAAK,eACLQ,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPxE,UAAU,aAKlB,oCAxIE,WAClB,GAAIwF,EACA,OACI,yBAASxF,UAAU,sBAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgC+G,IAChC,8BACI,8BAAIvB,EAAQpC,YAAZ,IAAyB,uBAAzB,gBACS,sBAAMpD,UAAU,4BAAhB,SAA6CwF,EAAQ8B,cAIlE,qBAAKtH,UAAU,WAAf,SAEQwF,EAAQqB,UAAYrB,EAAQqB,SAAShE,OAAS,EAC1CgE,EAAS3G,KAAI,SAAC8C,EAAM5C,GAChB,OAAO,sBAAMJ,UAAU,0BAAhB,SAAuDgD,GAAR5C,MACrD,OAMboF,EAAQ+B,UAAY/B,EAAQ+B,SAAS1E,OAAS,EAC1C,iDAAmB,uBAAM7C,UAAU,sBAAhB,UAAuCwF,EAAQgC,QAA/C,OAAnB,qBACO,sBAAMxH,UAAU,sBAAhB,SAAuCwF,EAAQ+B,SAAS,KAC3D,uBAAMvH,UAAU,0BAAhB,UAA2CwF,EAAQiC,QAAnD,cAFJ,OAGE,KAIV,qBAAKzH,UAAU,SAAf,SACI,mBAAGkD,KAAMsC,EAAQkC,SAAUxD,OAAO,SAASuC,IAAI,aAAazG,UAAU,uBAAtE,8BAwGH2H,GAzFjB,oCACI,oCAAS,gDAAT,IAAmC,wBAAO3H,UAAU,OAAjB,cAA0B2G,EAAO9D,OAAjC,gBACnC,qBAAK7C,UAAU,8CAAf,SAGQwF,EAAQmB,QAAUnB,EAAQmB,OAAO9D,OAAS,EACtC2C,EAAQmB,OAAOzG,KAAI,SAAC0H,EAAOxH,GACvB,OACI,sBAAKJ,UAAU,WAAf,UACI,4BAAG,4CAAe4H,EAAMJ,aACxB,qBAAKxH,UAAU,mBAAmB6H,gBAAc,OAAhD,SACI,qBAAK7H,UAAU,mBAAf,SACI,sBAAMA,UAAU,mBAAhB,SAEQ4H,EAAME,MAAM5H,KAAI,SAAC8C,EAAM+E,GACnB,OACI,gCACI,uBAAM/H,UAAU,YAAhB,UAA4B,uBAAMA,UAAU,YAAhB,UAA4B,sBAAMA,UAAU,oBAAhB,eAA5B,YAA5B,IAAqH,sBAAMA,UAAU,kBAAhB,yBAArH,IAA0K,sBAAMA,UAAU,kBAAhB,iBAA4C,uBAAMA,UAAU,mBAAhB,UAAmC,sBAAMA,UAAU,gCAAhB,eAAwD,sBAAMA,UAAU,oBAAhB,eAA3F,0CAA+KwF,EAAQ7E,KAAvL,IAA8LiH,EAAMJ,QAApM,IAA8MI,EAAME,MAAMC,GAAG,sBAAM/H,UAAU,oBAAhB,kBAAmD,sBAAMA,UAAU,oBAAhB,kBAAsD,sBAAMA,UAAU,iBAAsB,uBAAMA,UAAU,YAAhB,UAA4B,uBAAMA,UAAU,YAAhB,UAA4B,sBAAMA,UAAU,oBAAhB,gBAA5B,YAAyF,sBAAMA,UAAU,oBAAhB,oBADjrB+H,YAUlC,sBAAK/H,UAAU,4BAAf,UACI,uBAAO8D,KAAK,OAAO9D,UAAU,SAAS0F,UAAQ,EAC1CvB,MAAK,8DAAyDqB,EAAQ7E,KAAjE,aAA0EiH,EAAMJ,QAAhF,cAA6FI,EAAME,MAAM,GAAzG,0CACT,wBAAQ9H,UAAU,oBAAoBZ,MAAM,YAAYa,QAAS,SAACsD,GAAD,ORpE1E,SAACA,GAEhC,IAAIqC,EAAIrC,EAAEoC,cACNqC,EAAQpC,EAAEqC,uBAGd,GAAID,GAASA,EAAMjC,OAAQ,CAEvBiC,EAAMjC,SACN,IAEIzG,SAAS0G,YAAY,QAGrBJ,EAAEK,UAAUC,IAAI,oBAChBC,YAAW,WACPP,EAAEK,UAAUG,OAAO,sBACpB,MACL,MAAOC,GAELC,MAAM,qCQgDkG4B,CAAoB3E,IAA5F,SACI,mBAAGvD,UAAU,aAAawG,cAAY,gBAtBnBpG,MA4BlC,UAUrBoF,EAAQ2C,WAAa3C,EAAQ2C,UAAUtF,OAAS,EAC5C,oCACI,gDAEA,8BAEQ2C,EAAQ2C,UAAUjI,KAAI,SAAC8C,EAAM5C,GACzB,OACI,8BACI,mFADM4C,WAS5B,YCpFHoF,EAjDH,WACV,IAAMC,EAAa,CAAE/D,MAAO,OAE5B,OACE,uBAAMtE,UAAU,WAAhB,UAEE,cAAC,EAAD,IACA,yBAASA,UAAU,mCAAnB,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4B,OAAK,EAAC0G,KAAK,IAAIC,UAAWxG,IAEjC,cAAC,IAAD,CAAOuG,KAAK,UAAUC,UAAW7D,IAEjC,cAAC,IAAD,CAAO4D,KAAK,OAAOE,OAAQ,SAAC/F,GAAD,OACzB,cAAC,EAAD,2BAASA,GAAT,IAAgB3C,KAAM,CAAEV,MAAO,kCAGjC,cAAC,IAAD,CAAOkJ,KAAK,WAAWE,OAAQ,SAAC/F,GAAD,OAC7B,cAAC,EAAD,2BAAoBA,GAApB,IAA2B3C,KAAM,CAAEV,MAAO,sCAG5C,cAAC,IAAD,CAAOkJ,KAAK,aAAaC,UAAW7B,IAEpC,cAAC,IAAD,CAAO4B,KAAK,SAASC,UAAWxD,IAEhC,cAAC,IAAD,CAAOuD,KAAK,eAAeC,UAAWvJ,IAEtC,cAAC,IAAD,CAAOsJ,KAAK,WAAWE,OAAQ,SAAC/F,GAAD,OAC7B,cAAC,EAAD,2BAAaA,GAAb,IAAoB3C,KAAMuI,aAehC,cAAC,EAAD,QChDSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhJ,MAAK,YAAkD,IAA/CiJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGF5J,SAAS6J,eAAe,SAM1BV,M","file":"static/js/main.8030ca49.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./RandomUsers.css\";\r\n\r\nconst RandomUsers = () => {\r\n\r\n    // state\r\n    const [profile, setProfile] = useState([]);\r\n\r\n    const [title] = useState(\"Random Users\");\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        document.title = title;\r\n        console.log(' hi use effect');\r\n    });\r\n\r\n    useEffect(() => {\r\n        changeUser()\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     document.title = `You clicked ${count} times`;\r\n    //   }, [count]); // Only re-run the effect if count changes\r\n\r\n\r\n    const changeUser = () => {\r\n        fetch('https://randomuser.me/api/')\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(' data ', data.results);\r\n                setProfile(data.results);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <section className=\"random-user-wrapper\">\r\n            <h1>Get Random User</h1>\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n                <button className=\"btn btn-primary btn-block\" onClick={() => changeUser()}>\r\n                    Change User\r\n                    </button>\r\n            </div>\r\n\r\n            {profile.map((user, index) => (\r\n                <section className=\"profile_container\" key={index}>\r\n                    <div className=\"wraps\">\r\n                        <div className=\"profile_img\" style={{ background: `url(${user.picture.large})` }}>\r\n                            <img src={user.picture.large} alt={user.name.first} />\r\n                        </div>\r\n                        <div className=\"profile_details\">\r\n                            <h1 className=\"username\">{user.name.title} {user.name.first} {user.name.last}</h1>\r\n\r\n                            <div className=\"user_info\">\r\n                                <span className=\"info\">{user.email}</span>\r\n                                <span className=\"info\">{user.gender}</span>\r\n                                <span className=\"info\">{user.phone}</span>\r\n                                <span className=\"info\">{user.dob.age}</span>\r\n                            </div>\r\n\r\n                            <div className=\"user_links address\">\r\n                                <address>\r\n                                    {user.location.street.number} {user.location.street.name}, {user.location.city} <br />\r\n                                    {user.location.state} {user.location.country} - {user.location.postcode}\r\n                                </address>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            ))}\r\n\r\n\r\n\r\n\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default RandomUsers;","import { Link, NavLink } from 'react-router-dom';\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <div className=\"container\">\r\n                <div className=\"logo-section\">\r\n                    <div className=\"logo\">\r\n                        <span className=\"highlight-letter\">R</span><span className=\"logo-letters\">ight</span> \r\n                        <span className=\"highlight-letter\">H</span><span className=\"logo-letters\">and</span>\r\n                    </div>\r\n                </div>\r\n                <nav className=\"main-navigation\">\r\n                <ul>\r\n                    <li><NavLink to='/' exact  activeClassName=\"active\">Home</NavLink></li>\r\n                    <li><NavLink to='/about' activeClassName=\"active\">about</NavLink></li>\r\n                    <li><NavLink to='/github' activeClassName=\"active\">github</NavLink></li>\r\n                    <li><NavLink to='/cdn' activeClassName=\"active\">CDN Hub</NavLink></li>\r\n                    <li><NavLink to='/random-user' activeClassName=\"active\">Random Users</NavLink></li>\r\n                    <li><NavLink to='/contact' activeClassName=\"active\">Contact</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n            </div>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <p className=\"mb-0\">Copyright all rights reserved @ Hidaytrahman</p>\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","const Home = () => {\r\n    return (\r\n        <div className=\"home-wrapper\">\r\n            <h1>Welcome to Right hand</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export const doSomethingWithInput = (theInput) => {\r\n    //Do something with the input\r\n    return theInput;\r\n};\r\n\r\n// formate Date\r\nexport const formatDate = (d) => {\r\n    let today = new Date(d);\r\n    let date = today.getDate() + \"-\" + parseInt(today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n    return date;\r\n};\r\n\r\n\r\n// copy to clipboard\r\nexport const copyToClipboard = (e) => {\r\n\r\n    console.log('e', e.currentTarget );\r\n\r\n    // find target element\r\n    let t = e.currentTarget ;\r\n    let inp = t.parentElement.querySelector(\"#link\");\r\n\r\n    // console.log('inp ',inp);\r\n    // check if input element exist and if it's selectable\r\n    if (inp && inp.select) {\r\n        //select text\r\n        inp.select();\r\n        try {\r\n            // copy text\r\n            document.execCommand('copy');\r\n            //inp.blur();\r\n\r\n            // copied animation\r\n            t.classList.add('copied');\r\n            setTimeout(function () {\r\n                t.classList.remove('copied');\r\n            }, 1500);\r\n        } catch (err) {\r\n            //fallback in case exexCommand doesnt work\r\n            alert('please press Ctrl/Cmd+C to copy');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// copy  code to clipboard\r\nexport const copyCodeToClipboard = (e) => {\r\n    // find target element\r\n    let t = e.currentTarget ;\r\n    let input = t.previousElementSibling;\r\n\r\n    // check if input element exist and if it's selectable\r\n    if (input && input.select) {\r\n        //select text\r\n        input.select();\r\n        try {\r\n            // copy text\r\n            document.execCommand('copy');\r\n\r\n            // copied animation\r\n            t.classList.add('copy-btn-handler');\r\n            setTimeout(function () {\r\n                t.classList.remove('copy-btn-handler');\r\n            }, 1500);\r\n        } catch (err) {\r\n            //fallback in case exexCommand doesnt work\r\n            alert('please press Ctrl/Cmd+C to copy');\r\n        }\r\n\r\n    }\r\n\r\n}","\r\nconst RepoDetails = (props) => {\r\n    return (\r\n        <div className=\"repo-details-wrapper\">\r\n            <h3>Repo details {props.myData}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RepoDetails;","import React, { useState } from \"react\";\r\nimport \"./GithubRepo.css\";\r\nimport { formatDate } from \"../../core/Utils\";\r\nimport RepoDetails from \"./RepoDetails\";\r\n\r\nconst RepoList = (props) => {\r\n    const { repos } = props;\r\n\r\n    // show notification if repo is empty or null\r\n    if (!repos || repos.length === 0) {\r\n        return (\r\n            <div className=\"mt-1 alert alert-info\" role=\"alert\">\r\n                Sorry No repos\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const openDetails = (repo) => {\r\n        const parentElement = document.querySelector(\"#repo-list\");\r\n\r\n        //parentElement.style.display= 'none';\r\n\r\n        console.log(' repo ', repo);\r\n\r\n        props.repoDetailsHandler(repo.id);\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"github-wrapper\">\r\n            <h4>Repositories</h4>\r\n\r\n            <div className=\"list-group\" id=\"repo-list\">\r\n                {\r\n                    repos && repos.length > 0 ?\r\n                        repos.map((item) => {\r\n                            return (\r\n                                <div className=\"list-group-item list-group-item-action flex-column align-items-center\" data-id={item.id} key={item.id}>\r\n                                    <a href={item.html_url}><h5 className=\"mb-1\">{item.name}</h5></a>\r\n                                    <p className=\"mb-1\">{item.description}</p>\r\n                                    <small>{formatDate(item.created_at)}</small>\r\n                                    <span className=\"badge badge-primary badge-pill\">{item.size}</span>\r\n                                    <button className=\"btn btn-primary\" onClick={(e) => openDetails(item)}>Brief</button>\r\n                                </div>\r\n                            )\r\n                        }) : null\r\n                }\r\n            </div>\r\n\r\n            <RepoDetails mydata={\"rahman\"} />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RepoList;","import { useEffect, useState } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport RepoList from \"./RepoList\";\r\n\r\nconst FindRepo = (props) => {\r\n    const [title, setTitle] = useState();\r\n\r\n    return (\r\n        <section className=\"repo-wrapper\">\r\n            <div className=\"form-wrapper m-2\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-auto\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter your github username\"\r\n                            onBlur={event => setTitle(event.target.value)} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n\r\n                        <button type=\"button\" className=\"btn btn-primary\"\r\n                            onClick={() => props.clickHandler(title)}>Fetch</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                props.spinnerLoading ?\r\n                    <Loader\r\n                        type=\"BallTriangle\"\r\n                        color=\"#00BFFF\"\r\n                        height={200}\r\n                        width={200}\r\n                        className=\"loader\"\r\n                        visible={true}\r\n                    />\r\n                    : <RepoList repos={props.repos} />\r\n            }\r\n\r\n\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default FindRepo;","import React, { useEffect, useState } from \"react\";\r\nimport FindRepo from \"./FindRepo\";\r\n\r\nconst Github = () => {\r\n\r\n    const [repos, setRepos] = useState([]);\r\n    const [spinnerLoading, setSpinnerLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setSpinnerLoading(false);\r\n    }, []);\r\n\r\n    // get git repo\r\n    const getRepos = (username) => {\r\n        setSpinnerLoading(true);\r\n        console.log('Username ', username);\r\n\r\n        let activeUsername = username;\r\n        (username) ? activeUsername = username : activeUsername = 'hidaytrahman';\r\n\r\n        const apiUrl = `https://api.github.com/users/${activeUsername}/repos`;\r\n\r\n        const localUrl = 'http://localhost:4000/data';\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setRepos(data);\r\n                setSpinnerLoading(false);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"github-feature-wrapper\">\r\n            <h1>Github </h1>\r\n            <FindRepo\r\n                clickHandler={getRepos}\r\n                spinnerLoading= {spinnerLoading}\r\n                repos={repos} />\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Github;","const About = () => {\r\n    return(\r\n        <section className=\"about-wrapper\">\r\n            <h1>About Us</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default About;","const Contact = (props) => {\r\n\r\n    console.log(props);\r\n    return(\r\n        <section className=\"contact-wrapper\">\r\n            <h1>Contact Us</h1>\r\n            {props.data.color}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { copyToClipboard } from \"../../core/Utils\";\r\n\r\nimport \"./CDN.css\";\r\n\r\nconst CDN = (props) => {\r\n\r\n    const [libraries, setLibrary] = useState([]);\r\n\r\n    const [loader, setLoader] = useState(true);\r\n\r\n    const [title, setTile] = React.useState();\r\n\r\n    const [spinnerLoading, setSpinnerLoading] = useState(true);\r\n\r\n    // component load lifecycle for title\r\n    useEffect(() => {\r\n        setTile(props.data.title);\r\n        document.title = title;\r\n    }, [title]);\r\n\r\n\r\n    // life cycle for set libraries\r\n    useEffect(() => {\r\n\r\n        console.log(' loader ', loader);\r\n\r\n        // sample response has been trimmed to remove items in the results array.\r\n        // https://api.cdnjs.com/libraries?search=vue&fields=filename,description,version,github&limit=3\r\n\r\n        // https://api.cdnjs.com/libraries?search=jquery\r\n\r\n        // https://api.cdnjs.com/libraries/vue?fields=name,author,description,filename,sri,version,repository,autoupdate\r\n\r\n        // https://api.cdnjs.com/libraries/jquery?fields=assets,versions\r\n\r\n        // https://api.cdnjs.com/libraries/jquery/3.5.1\r\n\r\n        // https://api.cdnjs.com/libraries/vue/2.6.11?fields=files,sri\r\n\r\n        // https://api.cdnjs.com/libraries/vue/tutorials\r\n\r\n        // https://api.cdnjs.com/libraries/backbone.js/tutorials?fields=name,modified\r\n\r\n        // https://api.cdnjs.com/libraries/vue/tutorials/wtf-is-vuex\r\n\r\n\r\n        fetch(\"https://api.cdnjs.com/libraries/?limit=10\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(' data ', data);\r\n                setLibrary(data.results);\r\n                setLoader(false);\r\n                setSpinnerLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    // style\r\n    // const grayStyle = {\r\n    //     fontSize: '12px',\r\n    //     color: '#555555'\r\n    // }\r\n\r\n\r\n    const loadLibraryDOM = () => {\r\n        if (spinnerLoading) {\r\n            return (\r\n                <section className=\"custom-loader\">\r\n                    <Loader\r\n                        type=\"BallTriangle\"\r\n                        color=\"#00BFFF\"\r\n                        height={200}\r\n                        width={200}\r\n                        className=\"loader\"\r\n                    />\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <section className=\"\">\r\n                    <h3>Libraries</h3>\r\n                    <div className=\"row\">\r\n                        {\r\n                            libraries.map((library, index) => {\r\n                                return (\r\n                                    <div className=\"col-sm-6 col-md-4 col-lg-3 mb-4\" key={index}>\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{library.name}</h5>\r\n                                                <div className=\"copy-area\">\r\n                                                    <div id=\"inviteCode\" className=\"invite-page\">\r\n                                                        <input id=\"link\" value={library.latest} readOnly />\r\n                                                        <div id=\"copy\" onClick={(e) => copyToClipboard(e)}>\r\n                                                            <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-between row\">\r\n                                                    <a href={library.latest} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\" >Latest Download</a>\r\n\r\n                                                    <Link to={'/lib/' + library.name}><button className=\"btn btn-secondary\" >Description</button></Link>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </section>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"cdn-wrapper\">\r\n            <h1>CDN Hub</h1>\r\n\r\n            {loadLibraryDOM()}\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default CDN;","import { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { copyCodeToClipboard } from \"../../core/Utils\";\r\nimport \"./LibraryDetails.css\";\r\nimport \"./CodeStyle.css\";\r\n\r\nconst LibraryDetails = (props) => {\r\n    const [library, setLibrary] = useState([]);\r\n    const [assets, setAsset] = useState([]);\r\n    const [keywords, setkeyword] = useState([]);\r\n    const [title, setTitle] = useState()\r\n    const [spinnerLoading, setSpinnerLoading] = useState(true);\r\n\r\n    let libraryName = props.match.params.name;\r\n    // let libraryName = (props.match.params.name) ? props.match.params.name.toUpperCase() : props.match.params.name;\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.cdnjs.com/libraries/${libraryName}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //console.log(' data ', data);\r\n                setLibrary(data)\r\n                setAsset(data.assets);\r\n                setkeyword(data.keywords);\r\n                setSpinnerLoading(false);\r\n            })// Catch any errors we hit and update the app\r\n            .catch(error => {\r\n                console.log('custom errpr ', error);\r\n                setSpinnerLoading(false)\r\n            });\r\n\r\n    }, [libraryName]);\r\n\r\n    // for title\r\n    useEffect(() => {\r\n        document.title = libraryName.replace('-', ' ').toUpperCase();\r\n    }, [title]);\r\n\r\n    const headerContent = () => {\r\n        if (library) {\r\n            return (\r\n                <section className=\"main-parent-wrapper\">\r\n                    <div className=\"container\">\r\n                        <div className=\"jumbotron\">\r\n                            <h2 className=\"text-uppercase\">{libraryName}</h2>\r\n                            <div>\r\n                                <p>{library.description} <br />\r\n                            Developed By <span className=\"badge badge-secondary m-1\">{library.author}</span></p>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"keywords\">\r\n                                {\r\n                                    library.keywords && library.keywords.length > 0 ?\r\n                                        keywords.map((item, index) => {\r\n                                            return <span className=\"badge badge-warning m-1\" key={index}>{item}</span>\r\n                                        }) : null\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            {\r\n                                library.versions && library.versions.length > 0 ?\r\n                                    <p>Current version <span className=\"badge badge-success\">{library.version} </span>\r\n                         - Initial version <span className=\"badge badge-success\">{library.versions[0]}</span>\r\n                                        <span className=\"badge badge-warning m-1\">{library.license} License</span> </p>\r\n                                    : null\r\n                            }\r\n\r\n\r\n                            <div className=\"d-flex\">\r\n                                <a href={library.homepage} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary mr-1\">website</a>\r\n                                {/* <a href={library.repository.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary\">Github</a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </section>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    const cdnListContent = () => {\r\n        return (\r\n            <details>\r\n                <summary><span>CDN List of </span> <small className=\"ml-1\"> {assets.length} result</small></summary>\r\n                <div className=\"cnd-list-wrapper d-flex flex-column-reverse\">\r\n\r\n                    {\r\n                        library.assets && library.assets.length > 0 ?\r\n                            library.assets.map((asset, index) => {\r\n                                return (\r\n                                    <div className=\"each-lib\" key={index}>\r\n                                        <p><strong>React {asset.version}</strong></p>\r\n                                        <div className=\"gatsby-highlight\" data-language=\"html\" >\r\n                                            <pre className=\"gatsby-code-html\">\r\n                                                <code className=\"gatsby-code-html\">\r\n                                                    {\r\n                                                        asset.files.map((item, i) => {\r\n                                                            return (\r\n                                                                <div key={i}>\r\n                                                                    <span className=\"token tag\"><span className=\"token tag\"><span className=\"token punctuation\">&lt;</span>script</span> <span className=\"token attr-name\">crossorigin</span> <span className=\"token attr-name\">src</span><span className=\"token attr-value\"><span className=\"token punctuation attr-equals\">=</span><span className=\"token punctuation\">\"</span>https://cdnjs.cloudflare.com/ajax/libs/{library.name}/{asset.version}/{asset.files[i]}<span className=\"token punctuation\">\"</span></span><span className=\"token punctuation\">&gt;</span></span><span className=\"token script\"></span><span className=\"token tag\"><span className=\"token tag\"><span className=\"token punctuation\">&lt;/</span>script</span><span className=\"token punctuation\">&gt;</span></span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </code>\r\n                                            </pre>\r\n                                        </div>\r\n\r\n                                        <div className=\"code-controls copy-script\">\r\n                                            <input type=\"text\" className=\"d-none\" readOnly\r\n                                                value={`<script src=\"https://cdnjs.cloudflare.com/ajax/libs/${library.name}/'${asset.version}'/'${asset.files[0]}\" crossorigin=\"anonymous\"></script>`} />\r\n                                            <button className=\"btn btn-secondary\" title=\"Copy code\" onClick={(e) => copyCodeToClipboard(e)}>\r\n                                                <i className=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )\r\n                            }) : null\r\n                    }\r\n                </div>\r\n            </details>\r\n        )\r\n    }\r\n\r\n    const cdnTutorial = () => {\r\n        return (\r\n\r\n            library.tutorials && library.tutorials.length > 0 ?\r\n                <details>\r\n                    <summary>Tutorials</summary>\r\n\r\n                    <div>\r\n                        {\r\n                            library.tutorials.map((item, index) => {\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <p>Lorem ipsum dolor sit amet, eu alia suscipit mei.</p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </details>\r\n                : null\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"library-details-wrapper\">\r\n\r\n\r\n            {/* conditional based rendering */}\r\n\r\n            {\r\n                spinnerLoading\r\n                    ? (\r\n                        <section className=\"custom-loader\">\r\n                            <Loader\r\n                                type=\"BallTriangle\"\r\n                                color=\"#00BFFF\"\r\n                                height={200}\r\n                                width={200}\r\n                                className=\"loader\"\r\n                            />\r\n                        </section>\r\n                    )\r\n                    : (\r\n                        <section>\r\n                            {headerContent()}\r\n\r\n                            { cdnListContent()}\r\n\r\n                            { cdnTutorial() }\r\n                        </section>\r\n                        // Tabular section end here\r\n                    )\r\n            }\r\n\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LibraryDetails;","import React, { Component, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport './App.css';\nimport RandomUsers from \"./components/random_users/RandomUsers\";\nimport Header from \"./components/global/Header\";\nimport Footer from \"./components/global/Footer\";\n\nimport Home from \"./components/Home/Home\";\n\nimport Github from \"./components/github/Github\";\nimport About from \"./components/about/About\";\nimport Contact from \"./components/contact/Contact\";\nimport CDN from \"./components/CDN/CDN\";\nimport LibraryDetails from \"./components/CDN/LibraryDetails\";\n\nconst App = () => {\n  const extraProps = { color: 'red' }\n\n  return (\n    <main className=\"app-init\">\n     \n      <Header />\n      <section className=\"content-holder-section container\">\n\n        <Switch>\n          <Route exact path='/' component={Home} />\n          {/* both /roster and /roster/:number begin with /roster */}\n          <Route path='/github' component={Github} />\n\n          <Route path='/cdn' render={(props) => (\n            <CDN {...props} data={{ title: 'Get CDN of any libraries' }} />\n          )} />\n\n          <Route path='/details' render={(props) => (\n            <LibraryDetails {...props} data={{ title: 'Get details of any libraries' }} />\n          )} />\n\n          <Route path='/lib/:name' component={LibraryDetails} />\n\n          <Route path='/about' component={About} />\n\n          <Route path=\"/random-user\" component={RandomUsers} />\n\n          <Route path='/contact' render={(props) => (\n            <Contact {...props} data={extraProps} />\n          )} />\n\n\n          {/* <Route path='/page' children={(props) => (\n              props.match\n                ? <Page {...props} />\n                : <EmptyPage {...props} />\n            )} /> */}\n\n        </Switch>\n\n      </section>\n      {/* Content holder section end here */}\n\n      <Footer />\n    </main>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}